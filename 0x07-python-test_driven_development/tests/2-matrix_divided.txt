Testing ``2-matrix_divided`` module
================================

Using ``matrix``
=====================

First import the ``add_integer`` function from the module
	
	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided 

Test a matrix and div that meets all the requirement

	>>> matrix = [
	...     [1, 2, 3],
	...     [4, 5, 6]
	... ]
	>>> print(matrix_divided(matrix, 3))
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Pass float for div
	>>> matrix = [
	...     [1, 2, 3],
	...     [4, 5, 6]
	... ]
	>>> print(matrix_divided(matrix, 2.4))
	[[0.42, 0.83, 1.25], [1.67, 2.08, 2.5]]

Pass O for div
	>>> matrix = [
	...     [1, 2, 3],
	...     [4, 5, 6]
	... ]
	>>> print(matrix_divided(matrix, 0))
	Traceback (most recent call last):
		...
	ZeroDivisionError: division by zero

Pass empty matrix for div
	>>> matrix = []
	>>> print(matrix_divided(matrix, 2))
	Traceback (most recent call last):
		...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

Pass unequal length of matrix and integer div 
	>>> matrix = [
	...     [1, 2, 3],
	...     [4, 5, 6, 8]
	... ]
	>>> print(matrix_divided(matrix, 2))
	Traceback (most recent call last):
		...
	TypeError: Each row of the matrix must have the same size

Pass matrix with string
	>>> matrix = [
	... [1, 4, '7'],
	... ['5', 9, 10]
	... ]
	>>> print(matrix_divided(matrix, 2))
	Traceback (most recent call last):
		...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

Pass no argument
	>>> print(matrix_divided())
	Traceback (most recent call last):
		...
	TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

Pass just on argument
	Traceback (most recent call last):
		...
	TypeError: matrix_divided() missing 1 required positional argument: 'div'

Pass string for div
	>>> matrix = [
	...     [1, 2, 3],
	...     [4, 5, 6]
	... ]
	>>> print(matrix_divided(matrix, '3'))
	Traceback (most recent call last):
		...
	TypeError: div must be a number	
